{"ast":null,"code":"var express=require(\"express\");var bodyParser=require(\"body-parser\");var mongoose=require(\"mongoose\");var dotEnv=require(\"dotenv\");dotEnv.config();var app=express();var Recipe=mongoose.model(\"recipe\",{receipeName:String,receipeTime:Number,ingredients:Array,serves:Number});app.use(bodyParser.urlencoded({extended:false}));app.use(express.static(\"./public\"));app.get(\"/\",function(req,res){res.sendFile(__dirname+\"/index.html\");});app.get(\"/recipes_data\",function(req,res){//Fetching all the recipe data from the database\nRecipe.find().then(function(recipes){res.json(recipes);}).catch(function(error){console.log(\"Error in fetching recipes from database\");});});app.post(\"/recipes\",function(req,res){var recipe=new Recipe({receipeName:req.body.recipeName,receipeTime:req.body.recipeTime,ingredients:req.body.ingredients,serves:req.body.serves});recipe.save().then(function(recipe){res.send(recipe);}).catch(function(error){res.send(\"Error in adding recipe data\");});});app.put(\"/recipes/:id\",function(req,res){//Update the details in the DB\nvar id=req.params.id;var recipe=Recipe.findByIdAndUpdate(id);if(!recipe){res.json({Msg:\"Update Falied\",error:\"id NOt found\"});}else{recipe.receipeName=req.body.recipeName,recipe.receipeTime=req.body.recipeTime,recipe.ingredients=req.body.ingredients,recipe.serves=req.body.serves;recipe.save().then(function(){res.json({msg:\"Update Completed\"});}).catch(function(error){res.json({msg:\"Update Failed\",error:error});});}});app.delete(\"/recipes/:id\",function(req,res){//Delete the details in the DB\nvar id=req.params.id;var recipe=Recipe.findByIdAndDelete(id);if(!recipe){res.json({Msg:\"Delete Falied\",error:\"id NOt found\"});}else{recipe.remove().then(function(){res.json({msg:\"Delete Completed\"});}).catch(function(error){res.json({msg:\"Delete Failed\",error:error});});}});app.listen(9000,function(){mongoose.connect(process.env.MONGO_SERVER,{useUnifiedTopology:true,useNewUrlParser:true}).then(function(){console.log(\"Database connected successfully\");}).catch(function(error){console.log(\"Database connection failed\",error);});console.log(\"Server is running at port:9000\");});","map":{"version":3,"names":["express","require","bodyParser","mongoose","dotEnv","config","app","Recipe","model","receipeName","String","receipeTime","Number","ingredients","Array","serves","use","urlencoded","extended","static","get","req","res","sendFile","__dirname","find","then","recipes","json","catch","error","console","log","post","recipe","body","recipeName","recipeTime","save","send","put","id","params","findByIdAndUpdate","Msg","msg","delete","findByIdAndDelete","remove","listen","connect","process","env","MONGO_SERVER","useUnifiedTopology","useNewUrlParser"],"sources":["C:/Users/91801/OneDrive/Desktop/Cuvette/Nodejs/Micro-project2/src/index.js"],"sourcesContent":["const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst mongoose = require(\"mongoose\");\r\nconst dotEnv = require(\"dotenv\");\r\n\r\ndotEnv.config();\r\nconst app = express();\r\n\r\nconst Recipe = mongoose.model(\"recipe\", {\r\n  receipeName: String,\r\n  receipeTime: Number,\r\n  ingredients: Array,\r\n  serves: Number,\r\n});\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(express.static(\"./public\"));\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.sendFile(__dirname + \"/index.html\");\r\n});\r\n\r\napp.get(\"/recipes_data\", (req, res) => {\r\n  //Fetching all the recipe data from the database\r\n  Recipe.find()\r\n    .then((recipes) => {\r\n      res.json(recipes);\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error in fetching recipes from database\");\r\n    });\r\n});\r\n\r\napp.post(\"/recipes\", (req, res) => {\r\n  const recipe = new Recipe({\r\n    receipeName: req.body.recipeName,\r\n    receipeTime: req.body.recipeTime,\r\n    ingredients: req.body.ingredients,\r\n    serves: req.body.serves,\r\n  });\r\n  recipe\r\n    .save()\r\n    .then((recipe) => {\r\n      res.send(recipe);\r\n    })\r\n    .catch((error) => {\r\n      res.send(\"Error in adding recipe data\");\r\n    });\r\n});\r\n\r\napp.put(\"/recipes/:id\", (req, res) => {\r\n  //Update the details in the DB\r\n  let { id } = req.params;\r\n  const recipe = Recipe.findByIdAndUpdate(id);\r\n  if (!recipe) {\r\n    res.json({\r\n      Msg: \"Update Falied\",\r\n      error: \"id NOt found\",\r\n    });\r\n  } else {\r\n    (recipe.receipeName = req.body.recipeName),\r\n      (recipe.receipeTime = req.body.recipeTime),\r\n      (recipe.ingredients = req.body.ingredients),\r\n      (recipe.serves = req.body.serves);\r\n\r\n    recipe\r\n      .save()\r\n      .then(() => {\r\n        res.json({\r\n          msg: \"Update Completed\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        res.json({\r\n          msg: \"Update Failed\",\r\n          error: error,\r\n        });\r\n      });\r\n  }\r\n});\r\n\r\napp.delete(\"/recipes/:id\", (req, res) => {\r\n  //Delete the details in the DB\r\n  let { id } = req.params;\r\n  const recipe = Recipe.findByIdAndDelete(id);\r\n  if (!recipe) {\r\n    res.json({\r\n      Msg: \"Delete Falied\",\r\n      error: \"id NOt found\",\r\n    });\r\n  } else {\r\n    recipe\r\n      .remove()\r\n      .then(() => {\r\n        res.json({\r\n          msg: \"Delete Completed\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        res.json({\r\n          msg: \"Delete Failed\",\r\n          error: error,\r\n        });\r\n      });\r\n  }\r\n});\r\n\r\napp.listen(9000, () => {\r\n  mongoose\r\n    .connect(process.env.MONGO_SERVER, {\r\n      useUnifiedTopology: true,\r\n      useNewUrlParser: true,\r\n    })\r\n    .then(() => {\r\n      console.log(\"Database connected successfully\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Database connection failed\", error);\r\n    });\r\n\r\n  console.log(\"Server is running at port:9000\");\r\n});\r\n\r\n\r\n"],"mappings":"AAAA,GAAM,CAAAA,OAAO,CAAGC,OAAO,CAAC,SAAS,CAAC,CAClC,GAAM,CAAAC,UAAU,CAAGD,OAAO,CAAC,aAAa,CAAC,CACzC,GAAM,CAAAE,QAAQ,CAAGF,OAAO,CAAC,UAAU,CAAC,CACpC,GAAM,CAAAG,MAAM,CAAGH,OAAO,CAAC,QAAQ,CAAC,CAEhCG,MAAM,CAACC,MAAM,CAAC,CAAC,CACf,GAAM,CAAAC,GAAG,CAAGN,OAAO,CAAC,CAAC,CAErB,GAAM,CAAAO,MAAM,CAAGJ,QAAQ,CAACK,KAAK,CAAC,QAAQ,CAAE,CACtCC,WAAW,CAAEC,MAAM,CACnBC,WAAW,CAAEC,MAAM,CACnBC,WAAW,CAAEC,KAAK,CAClBC,MAAM,CAAEH,MACV,CAAC,CAAC,CAEFN,GAAG,CAACU,GAAG,CAACd,UAAU,CAACe,UAAU,CAAC,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAAC,CAAC,CACnDZ,GAAG,CAACU,GAAG,CAAChB,OAAO,CAACmB,MAAM,CAAC,UAAU,CAAC,CAAC,CAEnCb,GAAG,CAACc,GAAG,CAAC,GAAG,CAAE,SAACC,GAAG,CAAEC,GAAG,CAAK,CACzBA,GAAG,CAACC,QAAQ,CAACC,SAAS,CAAG,aAAa,CAAC,CACzC,CAAC,CAAC,CAEFlB,GAAG,CAACc,GAAG,CAAC,eAAe,CAAE,SAACC,GAAG,CAAEC,GAAG,CAAK,CACrC;AACAf,MAAM,CAACkB,IAAI,CAAC,CAAC,CACVC,IAAI,CAAC,SAACC,OAAO,CAAK,CACjBL,GAAG,CAACM,IAAI,CAACD,OAAO,CAAC,CACnB,CAAC,CAAC,CACDE,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC,CACxD,CAAC,CAAC,CACN,CAAC,CAAC,CAEF1B,GAAG,CAAC2B,IAAI,CAAC,UAAU,CAAE,SAACZ,GAAG,CAAEC,GAAG,CAAK,CACjC,GAAM,CAAAY,MAAM,CAAG,GAAI,CAAA3B,MAAM,CAAC,CACxBE,WAAW,CAAEY,GAAG,CAACc,IAAI,CAACC,UAAU,CAChCzB,WAAW,CAAEU,GAAG,CAACc,IAAI,CAACE,UAAU,CAChCxB,WAAW,CAAEQ,GAAG,CAACc,IAAI,CAACtB,WAAW,CACjCE,MAAM,CAAEM,GAAG,CAACc,IAAI,CAACpB,MACnB,CAAC,CAAC,CACFmB,MAAM,CACHI,IAAI,CAAC,CAAC,CACNZ,IAAI,CAAC,SAACQ,MAAM,CAAK,CAChBZ,GAAG,CAACiB,IAAI,CAACL,MAAM,CAAC,CAClB,CAAC,CAAC,CACDL,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBR,GAAG,CAACiB,IAAI,CAAC,6BAA6B,CAAC,CACzC,CAAC,CAAC,CACN,CAAC,CAAC,CAEFjC,GAAG,CAACkC,GAAG,CAAC,cAAc,CAAE,SAACnB,GAAG,CAAEC,GAAG,CAAK,CACpC;AACA,GAAM,CAAAmB,EAAE,CAAKpB,GAAG,CAACqB,MAAM,CAAjBD,EAAE,CACR,GAAM,CAAAP,MAAM,CAAG3B,MAAM,CAACoC,iBAAiB,CAACF,EAAE,CAAC,CAC3C,GAAI,CAACP,MAAM,CAAE,CACXZ,GAAG,CAACM,IAAI,CAAC,CACPgB,GAAG,CAAE,eAAe,CACpBd,KAAK,CAAE,cACT,CAAC,CAAC,CACJ,CAAC,IAAM,CACJI,MAAM,CAACzB,WAAW,CAAGY,GAAG,CAACc,IAAI,CAACC,UAAU,CACtCF,MAAM,CAACvB,WAAW,CAAGU,GAAG,CAACc,IAAI,CAACE,UAAU,CACxCH,MAAM,CAACrB,WAAW,CAAGQ,GAAG,CAACc,IAAI,CAACtB,WAAW,CACzCqB,MAAM,CAACnB,MAAM,CAAGM,GAAG,CAACc,IAAI,CAACpB,MAAO,CAEnCmB,MAAM,CACHI,IAAI,CAAC,CAAC,CACNZ,IAAI,CAAC,UAAM,CACVJ,GAAG,CAACM,IAAI,CAAC,CACPiB,GAAG,CAAE,kBACP,CAAC,CAAC,CACJ,CAAC,CAAC,CACDhB,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBR,GAAG,CAACM,IAAI,CAAC,CACPiB,GAAG,CAAE,eAAe,CACpBf,KAAK,CAAEA,KACT,CAAC,CAAC,CACJ,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEFxB,GAAG,CAACwC,MAAM,CAAC,cAAc,CAAE,SAACzB,GAAG,CAAEC,GAAG,CAAK,CACvC;AACA,GAAM,CAAAmB,EAAE,CAAKpB,GAAG,CAACqB,MAAM,CAAjBD,EAAE,CACR,GAAM,CAAAP,MAAM,CAAG3B,MAAM,CAACwC,iBAAiB,CAACN,EAAE,CAAC,CAC3C,GAAI,CAACP,MAAM,CAAE,CACXZ,GAAG,CAACM,IAAI,CAAC,CACPgB,GAAG,CAAE,eAAe,CACpBd,KAAK,CAAE,cACT,CAAC,CAAC,CACJ,CAAC,IAAM,CACLI,MAAM,CACHc,MAAM,CAAC,CAAC,CACRtB,IAAI,CAAC,UAAM,CACVJ,GAAG,CAACM,IAAI,CAAC,CACPiB,GAAG,CAAE,kBACP,CAAC,CAAC,CACJ,CAAC,CAAC,CACDhB,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBR,GAAG,CAACM,IAAI,CAAC,CACPiB,GAAG,CAAE,eAAe,CACpBf,KAAK,CAAEA,KACT,CAAC,CAAC,CACJ,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEFxB,GAAG,CAAC2C,MAAM,CAAC,IAAI,CAAE,UAAM,CACrB9C,QAAQ,CACL+C,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,YAAY,CAAE,CACjCC,kBAAkB,CAAE,IAAI,CACxBC,eAAe,CAAE,IACnB,CAAC,CAAC,CACD7B,IAAI,CAAC,UAAM,CACVK,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CAAC,CAAC,CACDH,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,KAAK,CAAC,CAClD,CAAC,CAAC,CAEJC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC/C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}